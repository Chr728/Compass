name: Server Tests
on: [push]
jobs:
  build:
    runs-on: ubuntu-latest
    env:
      TYPE: ${{ secrets.TYPE }}
      PROJECT_ID: ${{ secrets.PROJECT_ID }}
      PRIVATE_KEY_ID: ${{ secrets.PRIVATE_KEY_ID }}
      PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
      CLIENT_EMAIL: ${{ secrets.CLIENT_EMAIL }}
      CLIENT_ID: ${{ secrets.CLIENT_ID }}
      AUTH_URI: ${{ secrets.AUTH_URI }}
      TOKEN_URI: ${{ secrets.TOKEN_URI }}
      AUTH_PROVIDER_X509_CERT_URL: ${{ secrets.AUTH_PROVIDER_X509_CERT_URL }}
      CLIENT_X509_CERT_URL: ${{ secrets.CLIENT_X509_CERT_URL }}
      UNIVERSE_DOMAIN: ${{ secrets.UNIVERSE_DOMAIN }}

    steps:
      - uses: actions/checkout@v2

      - name: Create serviceAccountKey.json from Secrets
        run: |
          echo "{
            \"type\": \"$TYPE\",
            \"project_id\": \"$PROJECT_ID\",
            \"private_key_id\": \"$PRIVATE_KEY_ID\",
            \"private_key\": \"$PRIVATE_KEY\",
            \"client_email\": \"$CLIENT_EMAIL\",
            \"client_id\": \"$CLIENT_ID\",
            \"auth_uri\": \"$AUTH_URI\",
            \"token_uri\": \"$TOKEN_URI\",
            \"auth_provider_x509_cert_url\": \"$AUTH_PROVIDER_X509_CERT_URL\",
            \"client_x509_cert_url\": \"$CLIENT_X509_CERT_URL\"
          }" > server/serviceAccountKey.json

      - name: Install Dependencies
        run: cd server && npm install

      - name: Run Server Tests
        run: cd server && npm run test

      - name: Clear Secret
        run: rm server/serviceAccountKey.json
        if: always()
